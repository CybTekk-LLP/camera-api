{
  "openapi": "3.0.0",
  "info": {
    "title": "StoneTekk API",
    "description": "This is a StoneTekk API specification",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:1209/api"
    },
    {
      "url": "https://api.stonetekk.in/api"
    }
  ],
  "schemes" : ["http" , "https"],
  "paths": {
    "/users": {
      "get": {
        "security":[
          {"BearerAuth" : []
        }],
        "tags": ["Users"],
        "summary": "Get details of currently signed in user",
        "description": "Get details of currently signed in user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create an user",
        "description": "Create an user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Sign In",
        "description": "Sign in",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/users/{userId}": {
      "delete": {
        "security":[
          {"BearerAuth" : []
        }],
        "tags": ["Users"],
        "summary": "Delete users",
        "description": "Delete users",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "patch": {
        "security":[
          {"BearerAuth" : []
        }],
        "tags": ["Users"],
        "summary": "Update user by id",
        "description": "Update user by id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": ["Users"],
        "summary": "Refresh Token",
        "description": "Refresh token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenR"
              }
            }
          },
          "required": true
        }
      }
    },
    "/users/address": {
      "security":[
        {"BearerAuth" : []
      }],
      "post": {
        "tags": ["Address"],
        "summary": "Create a User Address",
        "description": "Create an user address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "get": {
        "tags": ["Address"],
        "summary": "Get all address",
        "description": "Get all address",
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          },
          "401": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server"
          }
        }
      }
    },
    "/users/forgot-password": {
      
      "post": {
        "tags": ["Forgot-password"],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "search results matching criteria"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/reset-password/{resetToken}": {
      "patch": {
        "tags": ["Forgot-password"],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDTO"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "resetToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }},          
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/email-verify": {
      
      "post": {
        "tags": ["Email Verify"],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "search results matching criteria"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/email-verify/{verifyEmail}": {
      "patch": {
        "tags": ["Email Verify"],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDTO"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "verifyEmail",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }},          
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/address/{addressId}": {
      "patch": {
        "tags": ["Address"],
        "summary": "Update address by id",
        "description": "Update address by id",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAddressDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "get": {
        "tags": ["Address"],
        "summary": "Get address by id",
        "description": "Get address by id",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "delete": {
        "tags": ["Address"],
        "summary": "Delete address by id",
        "description": "Delete address by id",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/products": {
      
      "get": {
        "security":[
          {"BearerAuth" : []
        }],
        "tags": ["Products"],
        "summary": "Get all the products",
        "description": "Get all the products",
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "security":[
          {"BearerAuth" : []
        }],
        "tags": ["Products"],
        "summary": "Create a product",
        "description": "Create a product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/products/{productId}": {
      "security":[
        {"BearerAuth" : []
      }],
      "get": {
        "tags": ["Products"],
        "summary": "Get product by id",
        "description": "Get product by id",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "delete": {
        "security":[
          {"BearerAuth" : []
        }],
        "tags": ["Products"],
        "summary": "Delete product",
        "description": "Delete product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {}
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "patch": {
        "tags": ["Products"],
        "summary": "Update product",
        "description": "Update product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/products/{productId}/approve": {
      "patch": {
        "tags": ["Staff 2FA"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/products/{productId}/decline": {
      "patch": {
        "tags": ["Staff 2FA"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },


      "/products/{productId}/defectives": {
        "security":[
          {"BearerAuth" : []
        }],
        "post": {
          "security":[
            {"BearerAuth" : []
          }],
          "tags": ["Defectives"],
          "summary": "Create a product",
          "description": "Create a product",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDefectiveDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "search results matching criteria",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DefectiveResponse"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad input parameter"
            }
          }
        }
      },
        
        "/products/{productId}/defectives/{defectiveId}": {
          "security":[
            {"BearerAuth" : []
          }],
        "patch": {
          "tags": ["Defectives"],
          "summary": "Update defective",
          "description": "Update product",
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "defectiveId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDefectiveDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "202": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DefectiveResponse"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad input parameter"
            }
          }
        },
        "delete": {
          "security":[
            {"BearerAuth" : []
          }],
          "tags": ["Defectives"],
          "summary": "Delete product",
          "description": "Delete product",
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Success",
              "content": {}
            },
            "400": {
              "description": "bad input parameter"
            }
          }
        }
    },

    "/products/{productId}/defectives/{defectiveId}/approve": {
      "patch": {
        "tags": ["Staff 2FA"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DefectiveResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/products/{productId}/defectives/{defectiveId}/decline": {
      "patch": {
        "tags": ["Staff 2FA"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DefectiveResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/category": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a Category",
        "description": "Create a Category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "Get all the Category",
        "description": "Get all the Category",
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/category/{categoryId}": {
      "patch": {
        "tags": ["Category"],
        "summary": "Update Category",
        "description": "Update Category",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "Get Category by id",
        "description": "Get Category by id",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "delete": {
        "tags": ["Category"],
        "summary": "delete Category by id",
        "description": "delete Category by id",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {}
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/category/{categoryId}/products": {
      "get": {
        "tags": ["Category"],
        "summary": "Get Category by id",
        "description": "Get Category by id",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": ["Category"],
        "summary": "Add product to  Category",
        "description": "Add product to Category",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductToCategoryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/organizations": {
      "post": {
        "tags": ["Organization"],
        "summary": "Add  Organization",
        "description": "Add  Organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/organizations/{organizationsId}": {
      "get": {
        "tags": ["Organization"],
        "summary": "Get Organization by id",
        "description": "Get Organization by id",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "patch": {
        "tags": ["Organization"],
        "summary": "Update Organization",
        "description": "Update Organization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "delete": {
        "tags": ["Organization"],
        "summary": "Delete Organization",
        "description": "Delete Organization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {}
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/organizations/{organizationsId}/users": {
      "get": {
        "tags": ["Organization"],
        "summary": "Get added user in Organization by organizationId",
        "description": "Get  added user in  Organization by organizationId",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": ["Organization"],
        "summary": "Send Invite to User ",
        "description": "Send Invite to User",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUsersToOrgDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully Created"
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/organizations/{organizationsId}/users/{inviteToken}": {
      "post": {
        "tags": ["Organization"],
        "summary": "Add User to  Organization",
        "description": "Add User to Organization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/organizations/{organizationsId}/branch": {
      "post": {
        "tags": ["Branches"],
        "summary": "Create Branch",
        "description": "Create Branch",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/organizations/{organizationsId}/branches/branchId": {
      "get": {
        "tags": ["Branches"],
        "summary": "Get Branch by id",
        "description": "Get Branch by id",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "patch": {
        "tags": ["Branches"],
        "summary": "Update Branch by id",
        "description": "Update Branch by id",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "delete": {
        "tags": ["Branches"],
        "summary": "Delete Branch by id",
        "description": "Delete Branch by id",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {}
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/checkouts/": {
      "get": {
        "tags": ["Checkouts"],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": ["Checkouts"],
        "description": "",
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/checkouts/{checkoutId}": {
      "get": {
        "tags": ["Checkouts"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": ["Checkouts"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/order-products/": {
      "post": {
        "tags": ["Order-Products"],
        "description": "",
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/order-products/{checkoutId}": {
      "get": {
        "tags": ["Order-Products"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": ["Order-Products"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": ["Order-Products"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/uploads/images": {
      "post": {
        "tags": ["Uploads"],
        "description": "",
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {}
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/uploads/gallery": {
      "post": {
        "tags": ["Uploads"],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/uploads/files": {
      "post": {
        "tags": ["Uploads"],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/uploads/videos": {
      "post": {
        "tags": ["Uploads"],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat" : "JWT"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "default": "jane.doe@example.com"
          },
          "password": {
            "type": "string",
            "default": "foopass"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "default": "Janice Doe"
          },
          "profilePic": {
            "type": "string",
            "default": "https://picsum.photos/300/300"
          },
          "phoneNumber": {
            "type": "string"
          },
          "storeName": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          },
          "address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressResponse"
            }
          },
          "organization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationResponse"
            }
          }
        }
      },
      "CreateProductDto": {
        "required": [
          "name",
          "price",
          "dimensions",
          "quantity",
          "featuredImage"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "stone one"
          },
          "description": {
            "type": "string",
            "default": "New Stone"
          },
          "brandName": {
            "type": "string",
            "default": "Amit Marble"
          },
          "dimensions": {
            "$ref": "#/components/schemas/DimensionsDTO"
          },
          "price": {
            "type": "number",
            "default": 3000
          },
          "quantity": {
            "type": "number",
            "default": 20
          },
          "status": {
            "type": "string",
            "default": "hold | loss | inStock"
          },
          "sellerName": {
            "type": "array",
            "items": {
              "type": "string",
              "deault": "Amit"
            }
          },
          "sku": {
            "type": "number",
            "default": ""
          },
          "featuredImage": {
            "type": "string",
            "default": "default.img"
          },
          "keyword": {
            "type": "array",
            "items": {
              "type": "string",
              "default": "stone"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "category": {
            "type": "number",
            "default": "1"
          }
        }
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "stone one"
          },
          "description": {
            "type": "string",
            "default": "New Stone"
          },
          "brandName": {
            "type": "string",
            "default": "Amit Marble"
          },
          "dimensions": {
            "$ref": "#/components/schemas/DimensionsDTO"
          },
          "price": {
            "type": "number",
            "default": 3000
          },
          "quantity": {
            "type": "number",
            "default": 20
          },
          "status": {
            "type": "string",
            "default": "hold | loss | inStock"
          },
          "sellerName": {
            "type": "array",
            "items": {
              "type": "string",
              "deault": "Amit"
            }
          },
          "sku": {
            "type": "number",
            "default": ""
          },
          "featuredImage": {
            "type": "string",
            "default": "default.img"
          },
          "keyword": {
            "type": "array",
            "items": {
              "type": "string",
              "default": "stone"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProductResponse": {
        "required": ["image", "name", "price"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "default": 1
          },
          "name": {
            "type": "string",
            "default": "stone one"
          },
          "description": {
            "type": "string",
            "default": "New Stone"
          },
          "brandName": {
            "type": "string",
            "default": "Amit Marble"
          },
          "dimensions": {
            "$ref": "#/components/schemas/DimensionsDTO"
          },
          "price": {
            "type": "string",
            "default": 3000
          },
          "quantity": {
            "type": "number",
            "default": 20
          },
          "state": {
            "type": "string" ,
            "default" : "draft | pending | approved"
          },
          "status": {
            "type": "string",
            "default": "hold | loss | inStock"
          },
          "sellerName": {
            "type": "string",
            "default": "Amit Marble"
          },
          "sku": {
            "type": "number",
            "default": ""
          },
          "featuredImage": {
            "type": "string",
            "default": "default.img"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "default": "default.img"
            }
          },
          "defective": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefectiveResponse"
            }
          }
        }
      },
      "DimensionsDTO": {
        "required": ["length", "breadth", "thickness"],
        "type": "object",
        "properties": {
          "length": {
            "type": "number",
            "default": 60
          },
          "breadth": {
            "type": "number",
            "default": 50
          },
          "thickness": {
            "type": "number",
            "default": 90
          }
        }
      },
      "CreateDefectiveDto": {
        "required": [
          "length" ,"breadth" ,"thickness","price" , "quantity"
        ],
        "type": "object",
        "properties": {
          "length": {
            "type": "integer",
            "default": 1234.90
          },
          "breadth": {
            "type": "integer",
            "default": 1234.90
          },
          "thickness": {
            "type": "integer",
            "default": 1234.90
          },
          "price": {
            "type": "number",
            "default": 3000
          },
          "quantity": {
            "type": "number",
            "default": 20
          }
          
        }
      },
      "UpdateDefectiveDto": {
        "required": [
          "length" ,"breadth" ,"thickness","price" , "quantity"
        ],
        "type": "object",
        "properties": {
          "length": {
            "type": "integer",
            "default": 1234.90
          },
          "breadth": {
            "type": "integer",
            "default": 1234.90
          },
          "thickness": {
            "type": "integer",
            "default": 1234.90
          },
          "price": {
            "type": "number",
            "default": 3000
          },
          "quantity": {
            "type": "number",
            "default": 20
          }
          
        }
      },
      "DefectiveResponse": {
        "required": [
          "length" ,"breadth" ,"thickness","price" , "quantity"
        ],
        "type": "object",
        "properties": {
          "length": {
            "type": "integer",
            "default": 1234.90
          },
          "breadth": {
            "type": "integer",
            "default": 1234.90
          },
          "thickness": {
            "type": "integer",
            "default": 1234.90
          },
          "price": {
            "type": "number",
            "default": 3000
          },
          "quantity": {
            "type": "number",
            "default": 20
          },
          "state": {
            "type": "string",
            "default" : "draft | pending | approved"
          },
          "updatedBy" : {
            "type" : "number" ,
            "default" : 1
          }
          
        }
      },
      "LoginUserDto": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "default": "jane.doe@example.com"
          },
          "password": {
            "type": "string",
            "default": "foopass"
          }
        }
      },

      "CatalogueResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          }
        }
      },
      "AddressResponse": {
        "type": "object",
        "properties": {
          "pincode": {
            "type": "integer",
            "default": 160001
          },
          "region": {
            "type": "string",
            "default": "121, Town Street"
          },
          "type": {
            "type": "string",
            "default": "work"
          }
        }
      },
      "CreateAddressDTO": {
        "required": ["type", "streetName", "pincode", "coordinates"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "home"
          },
          "streetName": {
            "type": "string",
            "default": "It park road"
          },
          "pincode": {
            "type": "string",
            "default": "160001"
          },
          "coordinates": {
            "$ref": "#/components/schemas/CoordinatesDTO"
          }
        }
      },
      "CoordinatesDTO": {
        "required": ["lat", "lng"],
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "default": "-20.255"
          },
          "lng": {
            "type": "number",
            "default": "-52.02454"
          }
        }
      },
      "AddressDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "default": "2"
          },
          "type": {
            "type": "string",
            "default": "home"
          },
          "streetName": {
            "type": "string",
            "default": "It park road"
          },
          "pincode": {
            "type": "string",
            "default": "160001"
          },
          "coordinates": {
            "$ref": "#/components/schemas/CoordinatesDTO"
          }
        }
      },
      "UpdateAddressDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "default": "2"
          },
          "type": {
            "type": "string",
            "default": "home"
          },
          "streetName": {
            "type": "string",
            "default": "It park road"
          },
          "pincode": {
            "type": "string",
            "default": "160001"
          },
          "coordinates": {
            "$ref": "#/components/schemas/CoordinatesDTO"
          }
        }
      },
      "CreateCategoryDTO": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "Indian Marble"
          }
        }
      },
      "CategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "default": 1
          },
          "name": {
            "type": "string",
            "default": "Indian Marble"
          }
        }
      },
      "UpdateCategoryDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "Indian Marble"
          }
        }
      },
      "AddProductToCategoryDTO": {
        "required": ["productId"],
        "type": "object",
        "properties": {
          "productId": {
            "type": "number",
            "default": 1
          }
        }
      },
      "CreateOrganizationDTO": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "Indian Marble Organization"
          }
        }
      },
      "OrganizationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "default": 1
          },
          "name": {
            "type": "string",
            "default": "Indian Marble Organization"
          },
          "ownerId": {
            "type": "number",
            "default": 2
          },
          "branches": {
            "$ref": "#/components/schemas/BranchDTO"
          }
        }
      },
      "UpdateOrganizationDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "Indian Marble Organization"
          }
        }
      },
      "CreateBranchDTO": {
        "required": ["name", "pincode", "contact", "coordinates"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "Indian Marble Branch"
          },
          "pincode": {
            "type": "string",
            "default": "184203"
          },
          "coordinates": {
            "$ref": "#/components/schemas/CoordinatesDTO"
          },
          "contact": {
            "type": "string",
            "default": "346534654"
          }
        }
      },
      "UpdateBranchDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "Indian Marble Branch"
          },
          "pincode": {
            "type": "string",
            "default": "184203"
          },
          "coordinates": {
            "$ref": "#/components/schemas/CoordinatesDTO"
          },
          "contact": {
            "type": "string",
            "default": "346534654"
          }
        }
      },
      "BranchDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "default": 1
          },
          "name": {
            "type": "string",
            "default": "Indian Marble Branch"
          },
          "pincode": {
            "type": "string",
            "default": "184203"
          },
          "coordinates": {
            "$ref": "#/components/schemas/CoordinatesDTO"
          },
          "contact": {
            "type": "string",
            "default": "346534654"
          },
          "organizationId": {
            "type": "number",
            "default": "3"
          }
        }
      },
      "AddUsersToOrgDTO": {
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "default": "joe@stonetekk.com"
          }
        }
      },
      "CreateOrderProductDTO" : {
        "required" : ["productId" , "quantity"],
        "type" : "object",
        "properties" : {
          "productId" : {
            "type" : "integer"
          },
          "quantity" : {
            "type" : "integer"
          }
        }
      },
      "ForgotPasswordDTO" : {
        "type" : "object",
        "properties" : {
          "email" :{
            "type" : "string"
          }
        }
      },
      "ResetPasswordDTO" : {
        "type" : "object",
        "properties" : {
          "password" :{
            "type" : "string"
          }
        }
      },
      "UpdateOrderProductDTO" : {
        "required" : ["productId" , "quantity"],
        "type" : "object",
        "properties" : {
          "productId" : {
            "type" : "integer"
          },
          "quantity" : {
            "type" : "integer"
          }
        }
      },
      "OrderProductResponse" : {
        "type" : "object" ,
        "properties" : {
          "productId": {
            "type" : "integer" 
          },
          "quantity" : {
            "type" : "integer"
          },
          "price" : {
            "type" : "integer"
          },
          "branchId" : {
            "type" : "integer"
          }
        }
      },
      "CreateCheckoutDTO" : {
        "required" : ["orderProducts" ],
        "type" : "object",
        "properties" : {
          "orderProducts" : {
            "type" : "array" ,
            "default" : [4,5]
          }
        }
      },
      "CheckoutResponse" : {
        "type" : "object" ,
        "properties" : {
          "orderProducts" : {
            "type" : "array" ,
            "default" : [4,5]
          },
          "status" : {
            "type" : "string",
            "default" : "ordered | delivered | dispatched"
          },
          "paymentStatus" : {
            "type" : "string",
            "default" : "pending | success"
          },
          "address" : {
            "$ref" : "#/components/schemas/AddressDTO"
          }
        }
      }
    }
  }
}
